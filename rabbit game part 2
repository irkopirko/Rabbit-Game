package rabbitgamepart1;

//import java.util.Random;
import java.util.Scanner;

import java.util.ArrayList;
import static rabbitgamepart1.RabbitGamePart1.whereToGo;
/**
 *
 * @author iremcelik
 */
public class RabbitGamePart2 {
static int S ;
static String PLAYER1 ="";
static String PLAYER2 ="";
static int point1 = 0; 
static int carrotC1 = 0; 
static int rabbitC1 = 0 ; 
static int ratC1 = 0 ;
static int point2 = 0; 
static int carrotC2 = 0; 
static int rabbitC2 = 0 ; 
static int ratC2 = 0 ;
static String playerName1="1st Player";
static String playerName2="2nd Player";
static ArrayList<String> player1path =new ArrayList<>(); 
static ArrayList<String> player2path =new ArrayList<>(); 


    public static void main(String[] args) {
        
        
        Scanner input = new Scanner(System.in);
        System.out.println("Enter number of the game area : ");
        S = input.nextInt();
        String carrots= "Carrot Locations : \n";
        for (int i = 1; i <= S ; i++) { // lines and Sth
            
            for (int b = ((S-i-1)*3)+(i)+((S-i)*3+1) ; b >= 0 ; --b) {  // this prints a pyramid-shape based on the given number S (more accurate if S<10)
                System.out.print(" ");
            }
            for (int j = 1 ; j <= 2*i-1 ; j++) {
                 if (j%2==0 ) {
                    carrots+= "("+ i +","+j+")\n"; 
                }
                 else ;
                System.out.print(i+","+j);
                if (j!=2*i-1) {
                    System.out.print("  ");
                }
                else;
            }
            for (int b = ((S-i-1)*3)+(i)+((S-i)*3+1) ; b >= 0 ; --b) {
                System.out.print(" ");
            }
                
        
            System.out.println("");
            
        }
        
        String rabbits= "\nRabbits Locations : \n" ; 
        //Random random= new Random();
        int i_rabbit1 ;
        int j_rabbit1 ;
        int i_rabbit2 ;
        int j_rabbit2 ;
        int i_rabbit3 ;
        int j_rabbit3 ;
        int i_rabbit4 ;
        int j_rabbit4 ;
        int i_rabbit5 ;
        int j_rabbit5 ;

            i_rabbit1 = (int)(Math.random()*S+1); //random.nextInt(S)+1;
            j_rabbit1 = (int)(Math.random()*(i_rabbit1*2-1)+1); //random.nextInt(i_rabbit1*2-1)+1;
            rabbits += "("+ i_rabbit1 +","+j_rabbit1+")\n";
            i_rabbit2 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rabbit2 = (int)(Math.random()*(i_rabbit2*2-1)+1);//random.nextInt(i_rabbit2*2-1)+1;
            rabbits += "("+ i_rabbit2 +","+j_rabbit2+")\n";
            i_rabbit3 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rabbit3 = (int)(Math.random()*(i_rabbit3*2-1)+1);//random.nextInt(i_rabbit3*2-1)+1;
            rabbits += "("+ i_rabbit3 +","+j_rabbit3+")\n";
            i_rabbit4 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rabbit4 = (int)(Math.random()*(i_rabbit4*2-1)+1);//random.nextInt(i_rabbit4*2-1)+1;
            rabbits += "("+ i_rabbit4 +","+j_rabbit4+")\n";
            i_rabbit5 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rabbit5 = (int)(Math.random()*(i_rabbit5*2-1)+1);//random.nextInt(i_rabbit5*2-1)+1;
            rabbits += "("+ i_rabbit5 +","+j_rabbit5+")\n";
            
        String rats = "\nRats locations : \n" ; 
        int i_rat1;
        int j_rat1;
        int i_rat2;
        int j_rat2;
        int i_rat3;
        int j_rat3;
        int i_rat4;
        int j_rat4;

            i_rat1 = (int)(Math.random()*S+1); //random.nextInt(S)+1;
            j_rat1 = (int)(Math.random()*(i_rat1*2-1)+1);//random.nextInt(i_rat1*2-1)+1;
            rats += "("+ i_rat1 +","+j_rat1+")\n";
            i_rat2 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rat2 = (int)(Math.random()*(i_rat2*2-1)+1);//random.nextInt(i_rat2*2-1)+1;
            rats += "("+ i_rat1 +","+j_rat2+")\n";
            i_rat3 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rat3 = (int)(Math.random()*(i_rat3*2-1)+1);//random.nextInt(i_rat3*2-1)+1;
            rats += "("+ i_rat3 +","+j_rat3+")\n";
            i_rat4 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
            j_rat4 = (int)(Math.random()*(i_rat4*2-1)+1);//random.nextInt(i_rat4*2-1)+1;
            rats += "("+ i_rat4 +","+j_rat4+")\n";
           
        //System.out.println(carrots);
        
        String HELL = "\nHell exit : ";
        int i_hell = (int)(Math.random()*S+1);//random.nextInt(S)+1;
        int j_hell =(int)(Math.random()*(i_hell*2-1)+1);// random.nextInt(i_hell*2-1)+1;
        String HEAVEN = "Heaven location : ";
        int i_heaven = (int)(Math.random()*S+1);//random.nextInt(S)+1;
        int j_heaven = (int)(Math.random()*(i_heaven*2-1)+1);//random.nextInt(i_heaven*2-1)+1;
        HELL += "("+ i_hell +","+j_hell+")";
        HEAVEN += "("+ i_heaven +","+j_heaven+")";
        //System.out.println(HELL);
        //System.out.println(HEAVEN);
        int i_PLAYER1 =(int)(Math.random()*S+1); //random.nextInt(S)+1;
        int j_PLAYER1 = (int)(Math.random()*(i_PLAYER1*2-1)+1);//random.nextInt(i_PLAYER1*2-1)+1;
        PLAYER1 += "("+ i_PLAYER1 +","+j_PLAYER1+")";
        System.out.println("\n1st player start location: ");
        System.out.println(PLAYER1);
        int i_PLAYER2 = (int)(Math.random()*S+1);//random.nextInt(S)+1;
        int j_PLAYER2 = (int)(Math.random()*(i_PLAYER2*2-1)+1);//random.nextInt(i_PLAYER2*2-1)+1;
        PLAYER2 += "("+ i_PLAYER2 +","+j_PLAYER2+")";
        System.out.println("\n2nd player start location: ");
        System.out.println(PLAYER2);
        
        
        
        
        
         System.out.println("Game Rules: \n1- When you are in a location having a carrot, you must answer the math question correctly. Otherwise, you cannot have the carrot.\n2- When you are in a location having a rabbit, you can pet them. But you have to feed them 1 of your carrots !  \n3- You lose 2 of your carrots if you are in a location having rats. \n4- You receive a game point in every 3 carrots. \n5- If you have no carrot to give, you loose 1 point for each. \n6) First player who gets to heaven wins. \n7) If one player gets to hell exit, other player wins. \nGOOD LUCK !!!");
         renamePlayer();
        if (whoWillStart()==0) {
            while(!RabbitGamePart1.exitToHell(i_hell, j_hell, i_PLAYER1, j_PLAYER1) || !RabbitGamePart1.exitToHeaven(i_heaven, j_heaven, i_PLAYER1, j_PLAYER1) || !RabbitGamePart1.exitToHell(i_hell, j_hell, i_PLAYER2, j_PLAYER2) || !RabbitGamePart1.exitToHeaven(i_heaven, j_heaven, i_PLAYER2, j_PLAYER2)){
            System.out.println("\n\nWhere do you want to go player 1?\n");
            RabbitGamePart1.whereToGo();
            int direction=input.nextInt();
            RabbitGamePart1.move(i_PLAYER1, j_PLAYER1, direction);
            player1path.add("("+ i_PLAYER1 +","+j_PLAYER1+")");
            if (RabbitGamePart1.isThereACarrot(i_PLAYER1, j_PLAYER1)) {
                System.out.println("A carrot ! ");
                
                
                if (RabbitGamePart1.generateAQuestion(4)) {
                    point1++;
                    carrotC1++;
                    System.out.println("Correct answer. You won a carrot ! ");
                }
                else {
                    point1--;
                    System.out.println("Wrong answer. -1 point . ");
                }
            }
            if (RabbitGamePart1.isThereARabit(i_rabbit1,j_rabbit1,i_rabbit2,j_rabbit2,i_rabbit3,j_rabbit3, i_PLAYER1,  j_PLAYER1)) {
                System.out.println("There is a rabbit ! ");
                rabbitC1++;
                if (carrotC1==0) {
                    --point1;
                    System.out.println("You have no carrot to feed the rabbit. -1 Point . ");
                }
                else if (carrotC1>0) {
                    System.out.println("You fed the rabbit. -1 Carrot. ");
                    carrotC1--;
                }
                else;
            }  
            if (RabbitGamePart1.isThereARat(i_rat1,j_rat1,i_rat2,j_rat2, i_PLAYER1, j_PLAYER1)) {
                System.out.println("There is a rat ! ");
                point1--;
                ratC1++;
                if (carrotC1<2) {
                    point1-=2;
                    System.out.println("You don't have enough carrot to give. -2 point. ");
                }
                else if (carrotC1>2) {
                    System.out.println("Rat ate 2 of your carrots. ");
                    carrotC1-=2;
                }
                else;
            }
           
            if (carrotC1%3==0) {
                point1++;
            }
             // 2
             System.out.println("\n\nWhere do you want to go player 2?\n");
            RabbitGamePart1.whereToGo();
            direction=input.nextInt();
            RabbitGamePart1.move(i_PLAYER2, j_PLAYER2, direction);
            player2path.add("("+ i_PLAYER2 +","+j_PLAYER2+")");
             if (RabbitGamePart1.isThereACarrot(i_PLAYER2, j_PLAYER2)) {
                System.out.println("A carrot ! ");
                
                
                if (RabbitGamePart1.generateAQuestion(4)) {
                    point2++;
                    carrotC2++;
                    System.out.println("Correct answer. You won a carrot ! ");
                }
                else {
                    point2--;
                    System.out.println("Wrong answer. -1 point . ");
                }
            }
            if (RabbitGamePart1.isThereARabit(i_rabbit1,j_rabbit1,i_rabbit2,j_rabbit2,i_rabbit3,j_rabbit3, i_PLAYER2,  j_PLAYER2)) {
                System.out.println("There is a rabbit ! ");
                rabbitC2++;
                if (carrotC2==0) {
                    --point2;
                    System.out.println("You have no carrot to feed the rabbit. -1 Point . ");
                }
                else if (carrotC2>0) {
                    System.out.println("You fed the rabbit. -1 Carrot. ");
                    carrotC2--;
                }
                else;
            }  
            if (RabbitGamePart1.isThereARat(i_rat1,j_rat1,i_rat2,j_rat2, i_PLAYER2, j_PLAYER2)) {
                System.out.println("There is a rat ! ");
                point2--;
                ratC2++;
                if (carrotC2<2) {
                    point2-=2;
                    System.out.println("You don't have enough carrot to give. -2 point. ");
                }
                else if (carrotC2>2) {
                    System.out.println("Rat ate 2 of your carrots. ");
                    carrotC2-=2;
                }
                else;
            }
           
            if (carrotC2%3==0) {
                point2++;
            }
            
            showResults1(player1path,carrotC1,point1,rabbitC1,ratC1);
            showResults2(player2path,carrotC2,point2,rabbitC2,ratC2);
            findCarrotCollector(carrotC1, carrotC2);
            findRatVisitor(ratC1,ratC2);
            findRabbitFeeder(rabbitC1,rabbitC2);
            
        }
        }
        else if (whoWillStart()==1) {
            while(!RabbitGamePart1.exitToHell(i_hell, j_hell, i_PLAYER1, j_PLAYER1) || !RabbitGamePart1.exitToHeaven(i_heaven, j_heaven, i_PLAYER1, j_PLAYER1) || !RabbitGamePart1.exitToHell(i_hell, j_hell, i_PLAYER2, j_PLAYER2) || !RabbitGamePart1.exitToHeaven(i_heaven, j_heaven, i_PLAYER2, j_PLAYER2)){
            System.out.println("\n\nWhere do you want to go player 2?\n");
            RabbitGamePart1.whereToGo();
            int direction=input.nextInt();
            RabbitGamePart1.move(i_PLAYER2, j_PLAYER2, direction);
            player2path.add("("+ i_PLAYER2 +","+j_PLAYER2+")");
            //2
            if (RabbitGamePart1.isThereACarrot(i_PLAYER2, j_PLAYER2)) {
                System.out.println("A carrot ! ");
                
                
                if (RabbitGamePart1.generateAQuestion(4)) {
                    point2++;
                    carrotC2++;
                    System.out.println("Correct answer. You won a carrot ! ");
                }
                else {
                    point2--;
                    System.out.println("Wrong answer. -1 point . ");
                }
            }
            if (RabbitGamePart1.isThereARabit(i_rabbit1,j_rabbit1,i_rabbit2,j_rabbit2,i_rabbit3,j_rabbit3, i_PLAYER2,  j_PLAYER2)) {
                System.out.println("There is a rabbit ! ");
                rabbitC2++;
                if (carrotC2==0) {
                    --point2;
                    System.out.println("You have no carrot to feed the rabbit. -1 Point . ");
                }
                else if (carrotC2>0) {
                    System.out.println("You fed the rabbit. -1 Carrot. ");
                    carrotC2--;
                }
                else;
            }  
            if (RabbitGamePart1.isThereARat(i_rat1,j_rat1,i_rat2,j_rat2, i_PLAYER2, j_PLAYER2)) {
                System.out.println("There is a rat ! ");
                point2--;
                ratC2++;
                if (carrotC2<2) {
                    point2-=2;
                    System.out.println("You don't have enough carrot to give. -2 point. ");
                }
                else if (carrotC2>2) {
                    System.out.println("Rat ate 2 of your carrots. ");
                    carrotC2-=2;
                }
                else;
            }
           
            if (carrotC2%3==0) {
                point2++;
            }
            //1
            
            System.out.println("\n\nWhere do you want to go player 1?\n");
            RabbitGamePart1.whereToGo();
            direction=input.nextInt();
            RabbitGamePart1.move(i_PLAYER1, j_PLAYER1, direction);
            player1path.add("("+ i_PLAYER1 +","+j_PLAYER1+")");
            if (RabbitGamePart1.isThereACarrot(i_PLAYER1, j_PLAYER1)) {
                System.out.println("A carrot ! ");
                
                
                if (RabbitGamePart1.generateAQuestion(4)) {
                    point1++;
                    carrotC1++;
                    System.out.println("Correct answer. You won a carrot ! ");
                }
                else {
                    point1--;
                    System.out.println("Wrong answer. -1 point . ");
                }
            }
            if (RabbitGamePart1.isThereARabit(i_rabbit1,j_rabbit1,i_rabbit2,j_rabbit2,i_rabbit3,j_rabbit3, i_PLAYER1,  j_PLAYER1)) {
                System.out.println("There is a rabbit ! ");
                rabbitC1++;
                if (carrotC1==0) {
                    --point1;
                    System.out.println("You have no carrot to feed the rabbit. -1 Point . ");
                }
                else if (carrotC1>0) {
                    System.out.println("You fed the rabbit. -1 Carrot. ");
                    carrotC1--;
                }
                else;
            }  
            if (RabbitGamePart1.isThereARat(i_rat1,j_rat1,i_rat2,j_rat2, i_PLAYER1, j_PLAYER1)) {
                System.out.println("There is a rat ! ");
                point1--;
                ratC1++;
                if (carrotC1<2) {
                    point1-=2;
                    System.out.println("You don't have enough carrot to give. -2 point. ");
                }
                else if (carrotC1>2) {
                    System.out.println("Rat ate 2 of your carrots. ");
                    carrotC1-=2;
                }
                else;
            }
           
            if (carrotC1%3==0) {
                point1++;
            }
            showResults1(player1path,carrotC1,point1,rabbitC1,ratC1);
            showResults2(player2path,carrotC2,point2,rabbitC2,ratC2);
            findCarrotCollector(carrotC1, carrotC2);
            findRatVisitor(ratC1,ratC2);
            findRabbitFeeder(rabbitC1,rabbitC2);
        }
        }
        findWinner(i_hell,j_hell,  i_heaven, j_heaven, i_PLAYER1, j_PLAYER1,  i_PLAYER2,j_PLAYER2);
    }
    static int  whoWillStart(){ // CUSTOM METHOD
        //Random randomForPlayer = new Random();// If 0, player 1 will start. If 1, player2 will start. 
        int r = (int)(Math.random()*2); //randomForPlayer.nextInt(2);
        if (r==0) {
            return 0;
        }
        else { // r==1
            return 1; 
        }
    }
    static void findWinner(int i_hell,int  j_hell, int i_heaven,int j_heaven,int i_PLAYER1,int  j_PLAYER1, int i_PLAYER2, int j_PLAYER2){ 
        if (RabbitGamePart1.exitToHell(i_hell, j_hell, i_PLAYER1, j_PLAYER1) || RabbitGamePart1.exitToHeaven(i_heaven, j_heaven, i_PLAYER2, j_PLAYER2) ) {
            System.out.println("Winner is: 2nd Player !!! ");
        }
        else if (RabbitGamePart1.exitToHell(i_hell, j_hell, i_PLAYER2, j_PLAYER2) || RabbitGamePart1.exitToHeaven(i_heaven, j_heaven, i_PLAYER1, j_PLAYER1)) {
            System.out.println("Winner is: 1st Player !!! ");
        }
    }
    static void findCarrotCollector(int carrotC1, int carrotC2){
        if (carrotC2>carrotC1) {
            System.out.println(playerName2 + " collected more carrots ! ");
        }
        else if (carrotC1>carrotC2){
            System.out.println(playerName1 + " collected more carrots ! ");
        }
        else 
            System.out.println("Both players collected " + carrotC1 + " carrots. ");
    }
    static void findRabbitFeeder(int rabbitC1, int rabbitC2){
        if (rabbitC2>rabbitC1) {
            System.out.println(playerName2 + " fed more rabbits ! ");
        }
        else if (rabbitC1>rabbitC2){
            System.out.println(playerName1 + " fed more rabbits ! ");
        }
        else 
            System.out.println("Both players fed " + carrotC1 + " rabbits. ");
    }
    static void findRatVisitor(int ratC1, int ratC2){
        if (ratC2>ratC1) {
            System.out.println(playerName2 + " has visited more rats ! ");
        }
        else if (ratC1>ratC2){
            System.out.println(playerName1 + " has visited more rats ! ");
        }
        else 
            System.out.println("Both players visited " + ratC1 + " rats. ");
    }
    static void renamePlayer(){ // CUSTOM METHOD
        Scanner input=new Scanner(System.in);
        System.out.println("Want to rename player ? \n1)Rename Player\n2)Skip");
        int answer=input.nextInt();
        if (answer==1) {
            System.out.println("Which player you want to rename ? \n1st\n2nd");
        
        int choice=input.nextInt();
        if (choice==1) {
            System.out.println("Enter the name : ");
            playerName1 = input.next();
            System.out.println("2nd Player's name changed to : " + playerName1);
        }
        else if (choice==2) {
            System.out.println("Enter the name : ");
            playerName2 = input.next();
            System.out.println("2nd Player's name changed to : " + playerName2);
        }
        else ;
        }
        else ;
    }
    static void showResults1(ArrayList playerpath,int carrotC1,int point1,int rabbitC1,int ratC1){
         System.out.println("");
        System.out.println("Your path: " + playerpath);
        System.out.println("Carrots: " + carrotC1);
        System.out.println("Points: " + point1);
        System.out.println("Rabbit petted : " + rabbitC1 );
        System.out.println("                        /) /)\n" +
"                       ( • ༝•)");
        System.out.println("Rat seen: " + ratC1);
    }
    static void showResults2(ArrayList playerpath,int carrotC2,int point2,int rabbitC2,int ratC2){
         System.out.println("");
        System.out.println("Your path: " + playerpath);
        System.out.println("Carrots: " + carrotC2);
        System.out.println("Points: " + point2);
        System.out.println("Rabbit petted : " + rabbitC2 );
        System.out.println("                        /) /)\n" +
"                       ( • ༝•)");
        System.out.println("Rat seen: " + ratC2);
    }
            
    
}
